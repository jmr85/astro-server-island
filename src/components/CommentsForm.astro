---
// export const prerender = false;

interface Props {
    post_slug: string;
}

const { post_slug } = Astro.props;


// const result = Astro.getActionResult(actions.addComment);
// const inputErrors = isInputError(result?.error) ? result.error.fields : {};

---

<form class="mb-8">
  <input type="hidden" name="post_slug" value={post_slug} />

  <div class="mb-4">
    <label for="name">Name:</label>
    <input
      type="text"
      id="name"
      name="name"
      class="w-full p-2 border rounded"
    />
    <!-- {inputErrors.name &&
    <p class="text-red-500">{inputErrors.name}</p>
    } -->
  </div>

  <div class="mb-4">
    <label for="email">Email:</label>
    <input
      type="email"
      id="email"
      name="email"
      class="w-full p-2 border rounded"
    />
    <!-- {inputErrors.email &&
    <p class="text-red-500">{inputErrors.email}</p>
    } -->
  </div>

  <div class="mb-4">
    <label for="message">Comment:</label>
    <textarea
      id="message"
      name="message"
      class="w-full p-2 border rounded"
    ></textarea>
    <!-- { inputErrors.message && (
    <p class="text-red-500">{inputErrors.message}</p>
    ) } -->
  </div>

  <button type="submit" class="px-4 py-2 bg-purple-600 text-white rounded">
    Add Comment
  </button>
</form>

<script>
  import { actions, isInputError } from 'astro:actions';

  const form = document.querySelector('form');
  form?.addEventListener('submit', async (event) => {
    event.preventDefault();
    const formData = new FormData(form);

     // Limpiar errores previos
    document.querySelectorAll('.error-msg').forEach(el => el.remove());

    const { error } = await actions.addComment(formData);

    // if (isInputError(error)) {
  
    //   if (error.fields.email) {
    //     error.fields.email.join(', ');
    //   }
    // }


    if (error) {
      if (isInputError(error)) {
        // Mostrar errores de validación en cada campo
        Object.entries(error.fields).forEach(([field, message]) => {
          const input = form.querySelector(`[name="${field}"]`);
          if (input) {
            const errorEl = document.createElement('p');
            errorEl.className = 'text-red-500 error-msg';
            errorEl.textContent = Array.isArray(message) ? message.join(', ') : message;
            input.after(errorEl);
          }
        });
      } else {
        // Mostrar error general
        const errorEl = document.createElement('p');
        errorEl.className = 'text-red-500 error-msg mt-4';
        errorEl.textContent = error.message;
        form.append(errorEl);
      }
    } else {
      form.reset();
      alert('¡Comentario enviado con éxito!');
    }

  })
</script>